version: "3.3"
services:
  pgrouting:
    container_name: pgrouting
    restart: always
    image: pgrouting/pgrouting:13-3.0-3.1.0
    volumes:
      - ./containers/pgrouting/data:/var/lib/postgresql/data
      - ./containers/pgrouting/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=tttBBB777
    networks:
      - pgrouting-front
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgrouting-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: vazheningleb@gmail.com
      PGADMIN_DEFAULT_PASSWORD: tttBBB777
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
    volumes:
      - ./containers/pgadmin/data/:/var/lib/pgadmin
    ports:
      - "5051:5050"
    networks:
      - pgrouting-front
    restart: unless-stopped
    depends_on:
      pgrouting:
        condition: service_healthy

  app:
    container_name: app
    environment:
      - POSTGRES_PASSWORD=tttBBB777
    build:
      context: containers/app
    depends_on: 
      pgrouting:
        condition: service_healthy
    command: "/usr/bin/python3 load.py"
    networks:
      - pgrouting-front


networks:
  pgrouting-front:
    driver: bridge